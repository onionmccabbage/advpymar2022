Advanced Python Review 2 until 3:00 (1hr 20mins) - 'show-and-tell' after tea
======================== 
In a new package, write modules to implement a 'posts' service, with a database
You can use the following json to get a very large number of 'posts':
  https://pastebin.com/N99bG5np

Details:
Write a module which will add a new table to your database (you only need to run once)
This new table needs columns for 'id' 'userId' 'title' and 'body'
(id should be the primary key)
Decide on suitable SQL data types for these fields (e.g. VARCHAR(256) for 'body')
Write a module which will retrieve the JSON data and iterate over it to populate this new table

In another module, ask the user which userId they are interested in 
Then retrieve all the 'posts' for that userId (use a 'WHERE' clause in the SQL) and display nicely
(You will need to validate that the userId is a positive integer within bounds)

Architecture:
Use classes, functions and/or modules as you see fit
Once the initial database has been created and populated, devise a class/module/function to encapslate neat ways to:
- create a new (valid) 'post' item
- update existing 'post' items, e.g. changing the value of 'title'

Optional:
Populate a new database table with the 'todos' json data https://pastebin.com/tdbwARpY
Find a way to show only 'completed' todo items for a given userId
Show all todos AND posts for a given userId
Consider how you could use sys.argv parameters to specify which data members to retrieve when running a module

